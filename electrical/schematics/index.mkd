---
layout: electrical
title: Schematics
---

![Interface Block Diagram](./InterfaceBlockDiagram.svg "Interface Block Diagram")

The Vehicle Interface (VI) is built around an LPC1769 ARM Cortex M3 MCU by NXP,
running at 100MHz.  The interface reads vehicle data via two CAN buses.  By
default the device reads from the Diagnostic High speed and Diagnostic Medium
speed buses (Channel B can also read from the Multimedia CAN bus).  The CAN
buses are converted into serial data by a [TJA1048
IC](http://www.nxp.com/documents/data_sheet/TJA1048.pdf).  The translated data
is sent to a tablet or PC via USB and Bluetooth.  USB is achieved by the device
controller built into the LPC1769.  Bluetooth is achieved via a [Roving Networks
RN-41 Embedded bluetooth module](http://www.rovingnetworks.com/products/RN41),
using UART channel 1 on the LPC1769 with hardware flow control.

The Dock has two power regulators.  The main regulator is a low dropout linear
regulator regulator that steps the +12V automotive power down to a steady +5V.
A smaller 3.3V low dropout regulator (LDO) provides the USB Hub with a 3.3V
rail.  The power section is configured so that a USB OTG host can either provide
or consume +5V power.  If the Dock is plugged into a PC or laptop, the +5V power
can be used to power the Dock and downstream devices.  If a mobile phone or
tablet is plugged into the Dock, and is configured to charge from the USB OTG
port, it will be able to charge from the +5V power.  This is protected by a 1A
PTC resettable fuse - if a power fault occurs, the fuse will trip and power will
need to be removed for several minutes until the fuse is reset.

Several other headers and jumpers have been exposed for development purposes.  A
header has been provided to access UART0 on the LPC1769 - this can be used for
serial debug as well as ISP programming.  The standard JTAG interface has also
been exposed through a 10-pin ARM JTAG Mini connector.  Two buttons have also
been added to the board - one resets the LPC1769, and the other allows the
LPC1769 to enter a USB bootloader if available.  See
[Inputs/Outputs](#inputsoutputs) for more information.

### Parts Layout

![Interface Connections](./connectors.JPG "Interface board - Connections")

![Interface Headers Bottom](./headers_bottom.JPG "Interface board - headers on bottom side")

![Interface Headers Top](./headers_top.JPG "Interface board - headers on top side")

